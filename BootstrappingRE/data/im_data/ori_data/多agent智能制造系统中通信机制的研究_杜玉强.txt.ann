[@多agent#政策技术*][@智能制造系统#政策技术*]中[@通信#政策技术*]机制的研究摘要:在分析[@agent#政策技术*]和[@多agent系统#政策技术*]的特点的基础上,着重研究了基于[@多agent#政策技术*]的[@智能制造系统#政策技术*]中的[@通信#政策技术*]问题,提出了对话模式作为[@agent#政策技术*]之间的[@通信#政策技术*]机制,并使用[@着色petri网#政策技术*]进行了校验。
随着[@信息技术#政策技术*]的飞速发展和[@经济#应用领域*]全球化趋势的不断加剧,[@制造业#应用领域*]将不得不面对日益激烈的市场竞争。
产品生命周期的日益缩短、更新速度的不断加快和顾客对产品需求的日趋[@个性化#技术特点*]、多样化,使得制造企业的生产模式和制造组织方式逐渐由面向产品转变为面向客户、面向需求和面向[@服务#政策技术*]。
为了赢得竞争,企业迫切需求一种具有良好[@柔性#技术特点*]、快速[@反应性#技术特点*]和具有容错能力的分布式[@网络#政策技术*]合作化生产[@制造系统#政策技术*]。
这种[@制造系统#政策技术*]应当能够在具备一定成本效益优势的情况下快速适应市场变化,根据不同的产品要求,迅速、[@经济#应用领域*]地建立制造过程,并能[@动态#技术特点*]地对整个制造过程进行自适应、[@自组织#技术特点*]、自学习、自由化和自维护。
[@分布式人工智能#政策技术*]领域的研究成果表明,采用[@agent技术#政策技术*]建立的[@智能制造系统#政策技术*]是最具潜力的发展方向。
本文首先对[@agent#政策技术*]和[@多agent系统#政策技术*]的特点进行了介绍,然后提出了一种基于对话模式的方法来设计[@agent#政策技术*]间的[@通信#政策技术*],并采用[$着色petri网#政策技术*]对其进行了校验。
2[@agent#政策技术*]和[@多agent系统#政策技术*]关于[@agent#政策技术*],至今还没有一个统一的定义,认为在没有人的干预下能够[@自主#技术特点*]地完成给定任务的对象都可以称为[@agent#政策技术*]。
而现在比较普遍的观点是[@agent#政策技术*]应该具有三个重要的特征—[@自治性#技术特点*]、适应性和[@协作#技术特点*]性。
所谓[@自治性#技术特点*]是在没有外界(人或其它[@软件#政策技术*])的干预下,能够积极主动地完成相应的任务;[@适应性#技术特点*]是指[@agent#政策技术*]具有感知、适应外界环境的能力,并有自学习能力,通过学习不断提高自身适应变化的外界环境;[@协作#技术特点*]性是[@多agent系统#政策技术*]的一个重要特征,在[@多agent系统#政策技术*]中,[@agent#政策技术*]相互[@协作#技术特点*]共同完成一个任务。
因此[@多agent系统#政策技术*]的能力并不由单个[@agent#政策技术*]所具有的能力所决定,而是由[@agent#政策技术*]相互[@协作#技术特点*]集体体现出来的智能所决定。
[@agent#政策技术*]具有目标、知识、标识等基本属性,它由通讯模块、业务处理模块、推理模块、学习模块、消息传递等功能单元所组成(如图1所示)。
从中可以看出,[@agent#政策技术*]具有面向对象技术中的类的特征,如继承、封装、消息传递等,所以在实现的时候,可以用面向对象的技术来实现[@agent#政策技术*]的功能。
[@agent#政策技术*]的具体组成结构如下:1)标识是一个[@agent#政策技术*]区别于[@多agent系统#政策技术*]中其它[@agent#政策技术*]的一种属性特征,一般包括[@agent#政策技术*]的名称、地址等;2)目标[@agent#政策技术*]不断运行所追求的具体目标,由目标确定[@agent#政策技术*]的责任和义务;3)知识包括事实和规则,存储于[@agent#政策技术*]的[@知识库#政策技术*]中;4)通讯模块负责[@agent#政策技术*]的通讯、消息接受和发送,可以传递任务、运行结果和实现知识共享;5)推理模块根据[@agent#政策技术*]的目标、知识和能力以及最新信息进行推理和决策,作用于消息处理、业务处理等,做出的决策必须有利于目标的实现;6)业务处理模块进行业务的处理,由业务处理方法构成,它是[@agent#政策技术*]实现目标的主体;7)学习模块从[@agent#政策技术*]的运行过程中总结经验,为[@知识库#政策技术*]增加新的知识,提高适应环境变化的能力;[@多agent系统#政策技术*]由一组在逻辑上或者物理位置上分布的许[@多agent#政策技术*]组成,它们通过[@网络#政策技术*]连接,共享资源,为完成共同的任务而组成一个有组织的群体。
一般认为[@多agent系统#政策技术*]特别适用于那些能根据空间、时间或功能进行分解和划分的[@应用#政策技术*]问题,在这些[@应用#政策技术*]中采用[@多agent系统#政策技术*]将带来如下优点:由于处理的并行化,系统的运行速度将加快;由于对信息的处理是在信息源的附近进行的,所以对通讯带宽的要求较低;由于某一个[@agent#政策技术*]出错不会影响整个系统的运行,因此,系统具有较高的可靠性;由于感知、处理和动作紧密相伴,系统具有较高的反应速度。
3[@agent#政策技术*]之间的[@通信#政策技术*]机制-对话模式在[@多agent系统#政策技术*]中,[@agent#政策技术*]之间的协调和[@协作#技术特点*]是解决问题的关键。
因此,[@agent#政策技术*]之间必须要通过[@通信#政策技术*]来交换信息,这些信息包括目标、意图、结果和状态等。
对话(conversation)是这种信息交流中的最有效最直接的一种方式。
对话是指两个或两个以上的[@agent#政策技术*]为了达到特定的目的而传递的一系列消息的行为。
[@通信#政策技术*]的必备条件是在异类的[@agent#政策技术*]之间能够进行可靠的和灵活的交互,并且,①不存在可能的矛盾和死锁;②对话会伴随着[@agent#政策技术*]间活动的结束而中止;为了简化[@agent#政策技术*]间[@通信#政策技术*]模块的设计,需要有一套[@通信#政策技术*]规则:对话策略(conversationpolicies,[@cps#政策技术*])来降低[@agent#政策技术*][@通信#政策技术*]的复杂程度,下面将采用基于模式的方法来设计面向[@agent#政策技术*]的生产系统中的[@通信#政策技术*]和对话模块。
3.1需求分析所要设计的对话模块主要有以下要求:①它应该是面向任务的。
这是因为对话通常发生在[@agent#政策技术*]需要实现特定目标或是完成特定任务时,这与一般的[@通信#政策技术*]协议有很大不同。
②对话模块应当和对话的语义联系起来。
③[@通信#政策技术*]模块必须允许[@通信#政策技术*]内容的提取。
④[@通信#政策技术*]模块能提供错误修复。
⑤它应该具备可复用性和可扩展性。
⑥它能够按照需求[@自动#技术特点*]装载。
对话模式的构建要从对所有对话主题的确认开始,然后把单独的[@通信#政策技术*]行为收集起来加以分类,形成模式。
这些模式的集合可以用cpn来检查是否存在矛盾和死锁。
通过分类、实例化、继承和聚合从而得到一组模式类和模式实例,图1给出了对话模式的构建过程。
图2对话模型的构建过程3.2对话主题的确定对话通常集中于一个或多个主题。
主题包括一系列的属性。
因此,一旦知道了[@agent#政策技术*]的目标或任务,我们就能定义它与其它[@agent#政策技术*]的对话主题,进而定义它们的对话行为。
对话的主题可以用一些变量来描述,这些变量在[@agent#政策技术*]间进行对话的时候会被赋予特定的值。
对话主题(topic,tp)可以如下定义:tp=(tpid;arguments)。
tpid指的是主题的标识,arguments是指主题中的参数列表。
举例如下:在一个按订单生产的企业中,在定单中会对到货日期、价格和交货地点进行约定,这样,后勤[@agent#政策技术*]、生产计划[@agent#政策技术*]和生产[@agent#政策技术*]需要就不同的主题进行对话,相关的主题表述如下:tp1:(prodtar;custorder,cust,loc,dd,price)(1)tp2:(mfgcost;factoryorder,dd,cost)(2)(1)式中对话主题prod_tar描述了在后勤[@agent#政策技术*]和生产计划[@agent#政策技术*]之间对生产目标进行的对话:运输货物a以price的价位在dd日送到loc地点的客户custorder手中。
(2)式中对话主题mfgcost描述了生产计划[@agent#政策技术*]和生产[@agent#政策技术*]之间对生产成本进行的对话:对于订单factoryorder在dd日完成的生产成本cost.这些主题通过一系列的对话来确定切实可行的生产目标和最优的生产完成日期。
由上可知,对话主题只是在较抽象的层次上定义了信息的交互,并没有讨论例如[@通信#政策技术*]时机等具体问题。
3.3对话模式的定义对话模式是面向目标的对话方法和模块化的对话策略。
定义:convschema=(goal,task,topics,[@agent#政策技术*]types,subschemata,acts,states,flows)其中goal:参与对话的[@agent#政策技术*]要实现的目标;task:参与对话的[@agent#政策技术*]要执行的任务;types={agt1,agt2,…,agtm}(m>0):参与对话和提供所需[@服务#政策技术*]的[@agent#政策技术*]的类型;sub-schemata={subschema1,subschema2,…,subschemas}(s>=0):组成对话模式的子模式;acts={act1,act2,…,actn}(n>0):所有参与对话的[@agent#政策技术*]的行为的集合;states={sta1,sta2,…,stao}(o>0):每个[@agent#政策技术*]的对应状态的变化;flows=acts×states∪states×acts:acts和states之间的关系;tps={tp1,tp2,…,tpk}(k>0):对话主题的集合;对话模式分为原子模式和复合模式两类。
复合模式可以是几种模式的组合,而原子模式则不可以。
举一个原子模式的例子:[@agent#政策技术*]a对[@agent#政策技术*]b有一个业务请求:request,可以表示为对话模式:request=(goal,task,topics,(a,b),(request,continue,rep[@ai#政策技术*]r,reqack,reqrep[@ai#政策技术*]r,acknowledge,cancel),(sub[@mit#事业单位*]ted,f[@ai#政策技术*]led,succeeded),(content))。
表示的意思为两类[@agent#政策技术*]a和b,a向b请求的对话过程分为七个子模式:发出请求(request),继续等待(continue),请求修理(rep[@ai#政策技术*]r),接受请求(reqack),接受修理请求(reqrep[@ai#政策技术*]r),确认请求(acknowledge),对话结束(cancel)。
对话的状态有三种:提交(sub[@mit#事业单位*]ted),失败(f[@ai#政策技术*]led),成功(succeed)。
3.4对话模式的cpn建模petri网是描述具有分布、并发、异步特征的离散事件[@动态#技术特点*]系统的有效工具,它用四种元素为系统模型建模:库所(place)、变迁(transition)、弧(arc)和令牌(token),它用库所、变迁、弧的连接标识系统的静态结构,通过变迁的激发和令牌的移动描述系统的[@动态#技术特点*]行为。
[@着色petri网#政策技术*](coloredpetrinets,cpn)作为一种[@高级#技术特点*]的[@petri网#政策技术*]模型,通过[@对库所和令牌加以颜色类型的标定#技术特点*],对变迁和弧加上发生条件的约束,使得建模功能大大增强。
正是因为[$着色petri网#政策技术*]的以上优点,所以采取它作为对话模式的建模分析工具。
3.4.1原子模式的构建对话模式中的行为或子模式可以用cpn中的变迁表示,模式的状态用库所表示,消息用令牌来持有。
下面是模式的构建步骤:第一步:根据对话主题区分[@agent#政策技术*]的种类、属性和状态;第二步:对于每一个[@agent#政策技术*]的种类,模式中的每一种行为用变迁来表示,同一种[@agent#政策技术*]对应的多个行为的变迁水平排列;第三步:在变迁之间添加库所和弧。
通过这种方式,为每个[@agent#政策技术*]之间发生的信息交换建立了模型;第四步:为对话主题添加被状态库所描绘的信息交换;第五步:建立外部接口。
下面对对话模式request进行构建:图3对话模式request的构建t1={request,reqack,continue,rep[@ai#政策技术*]r}t2={continue,rep[@ai#政策技术*]r,cancel}t3={cancel,ack}t4={reqrep[@ai#政策技术*]r,rep[@ai#政策技术*]r,ack}t5={reply}3.4.2复合模式的构建复合模式有很多种构建方法,如分层的cpn表示法和面向对象的分析和设计方法等。
复合模式可以通过对一些原子模式的整合而得到,整合的方法主要有两种:聚合和连接。
聚合这种方法能够充分利用[$着色petri网#政策技术*]的特性进行仿真。
例如把request、reply和ack三种原子模式聚合为复合模式:info-obtaining,cpn的图形分析如图4所示。
变迁中的颜色集定义如下:t1=t2=request(“intent”,“dat[@ai#政策技术*]nfo.”)图4对话模式info-obt[@ai#政策技术*]ning的构建t3=t4=reply(“intent”,“resultinfo.”)t5=ack(resultinfo)库所中的颜色集定义如下:c(p1)=c(p2)=c(p7)={<cusorder,logistics[@agent#政策技术*]>,<facorder,productionpl[@ann#政策技术*]ing[@agent#政策技术*]>,<mfgorder,factory[@agent#政策技术*]}c(p5)=c(p9)={<lac1,cusorder>,<lac2,facorder>,<mfgorder,factory[@agent#政策技术*]>}c(p10)={<productionpl[@ann#政策技术*]ing[@agent#政策技术*]>,<productmodel>,<featuremodel>}c(p3)={<logistics[@agent#政策技术*],productionpl[@ann#政策技术*]ing[@agent#政策技术*]>,<productionpl[@ann#政策技术*]ing[@agent#政策技术*],productmodel>,<productionpl[@ann#政策技术*]ing[@agent#政策技术*],featuremodel>}c(p8)={<productionpl[@ann#政策技术*]ing[@agent#政策技术*]>,<productmodel>,<featuremodel>}c(p4)={<lac1>,<lac2>,<lac3>}c(p6)={<ka1>,<ka2>,<ka3>}4结束语在[@多agent#政策技术*][@智能制造系统#政策技术*]中,问题的解决是一个渐进的多步的过程,其中每一步都存在[@agent#政策技术*]之间的对话。
本文着重分析了系统中[@agent#政策技术*]之间[@通信#政策技术*]的特点,提出了一种基于对话模式的[@通信#政策技术*]机制,并用[@着色petri#政策技术*]进行了验证,得到了较满意的结果。
