[@智能制造#政策技术*]单元生产调度算法研究摘要:针对[@智能制造#政策技术*]单元的调度问题,建立了相关的数学模型,并提出了一种改进的[@遗传算法#政策技术*]来求解该问题。
在算法的初始过程中加入爬山算法来提高初始解的质量,并在交叉操作时,对机器选择部分染色体采用一种由当前种群最优个体指导交叉的方法来改进交叉算子,以扩大算法的搜索能力。
最后采用一个实例对该算法进行仿真验证,结果表明其性能比传统[@遗传算法#政策技术*]更优。
关键词:[@智能制造#政策技术*]单元;[@遗传算法#政策技术*];爬山算法;引导交叉[@智能制造#政策技术*]单元[1]的概念可描述为从订单的生成到订单任务的完成整个过程都通过[@计算机#应用领域*]控制的生产单元,其系统的架构图如图1所示,该单元通过[@高级#技术特点*]计划与排程系统(aps)与制造执行系统(mes)[@集成#技术特点*]确定加工任务,然后通过opcserver下达加工命令给[@plc#政策技术*],最后由[@plc#政策技术*]控制该单元进行加工。
该单元通常由几台加工机床、一条运输导轨、一个运输[@机器人#政策技术*]和一个立体仓库构成。
该单元生产排程的核心问题是生产订单中待加工的工件与加工机床及运输[@机器人#政策技术*]之间的调度问题。
目前用来解决调度问题的[@智能算法#政策技术*]有模拟退火法(sa)、禁忌搜索法(ts)和[@遗传算法#政策技术*](ga)等[2-4]。
其中由于[@遗传算法#政策技术*]具有良好的鲁棒性、隐含并行性以及全局搜索能力等特点,在生产调度领域得到广泛的[@应用#政策技术*][5]。
为了克服传统[@遗传算法#政策技术*]存在收敛慢、容易陷入局部极小值的问题,张国辉等人[5]利用全局搜索、局部搜索以及随机生成的组合形式来初始化种群,通过实例证明他们的方法产生的解的质量明显有提高;何斌等人[6]采取一种精英保留,同时在算法中加入一种[@动态#技术特点*]的交叉和变异概率的方法提高了[@遗传算法#政策技术*]的收敛速度及解的质量;王雷等人[7]把[@自动#技术特点*]生产车间[@agv#政策技术*]在各机床之间的运输时间考虑在内,提出了一种淘汰对进化无用的基因,并提出一种[@自适应#技术特点*]的交叉和变异概率公式,最后通过实例证明其算法的优越性。
文章针对[@智能制造#政策技术*]单元生产调度算法进行研究,提出了一种混合爬山[@遗传算法#政策技术*],该算法采用随机与爬山算法相结合的方式产生初始种群,以提高[@遗传算法#政策技术*]的收敛速度及精度,并在交叉算子中引入最优个体,利用最优个体指导交叉操作的方法,提高算法的全局搜索能力。
1[@智能制造#政策技术*]单元生产调度问题描述[@智能制造#政策技术*]单元调度问题通常可描述为:一个订单任务含n个工件j=ji{},1≤i≤n,每个工件有h道工序o=oj{},1≤j≤h,要把所有工件的所有工序在m台机床上加工完m=mk{},1≤k≤m。
其中每一个工件的各道工序的加工时间由其所选择的机床决定,且一道工序可选择几台不同的加工机床。
此外,当机床mw加工完工件ji的第oj-1道工序时,[@机器人#政策技术*]需立即把该工件运输到机床mk进行下一道工序oj加工。
且[@机器人#政策技术*]在不同机床之间的搬运时间不相同。
因此,解决该问题的核心就是先确定各道工序所选择的加工机床,再确定各个机床上工序的加工顺序及开始加工时间,然后根据选择的机床确定[@机器人#政策技术*]的搬运时间。
要完成这项工作,需要给定以下约束条件:(1)所有的机床和工件在0时刻都是可以进行加工的;(2)不同工件的工序没有加工优先级,但是同一个工件的不同工序有优先级,即严格按照该工件的第一道工序一直到最后一道工序进行加工;(3)同一时刻一道工序只能在一台机床上加工;(4)工件的装载和卸载时间以及[@机器人#政策技术*]的空载时间不计;(5)每台加工机床具备足够的缓冲区域存放加工好及待加工的临时工件;(6)对所有的工件,不考虑加工中断情况;(7)假定工件的一道工序被加工完成,则可以立即由[@机器人#政策技术*]运输到下一台机床上进行加工。
本文的研究目标是求解[@智能制造#政策技术*]单元调度问题中完成一个订单任务所有工件的加工时间的最小值。
建立如下数学模型:tmin=min(max(ci))(1)σmk=1xijk=1,工序在机床k上加工0,其他{(2)sij=sijkσmk=1xijk(3)tij=tijkσmk=1xijk(4)si(j+1)≥sij(5)t*=ci(j-1)w+ti(j-1)wk(6)sijk=t*,t*≥tijktijk,t*<tijk{(7)cijk=sijk+tijk(8)式中各变量定义:i为工件索引(i=1,2,…,n);j为工序索引(j=1,2,…,h);k、w为机床索引(k=1,2,…,m;w=2,3,…,m);ci为第i个工件的完工时间;sij为工序oij开始加工时间;tij为工序oij的加工时间;tijk为工件i的第j道工序在机床k上的加工时间;sijk为工序oij在机床k上实际开始加工时间;cijk为工序oij在机床k上的完工时间;xijk为工序oij在机床k上加工为1,其他为0;ci(j-1)w为工件件i上道工序完工时间;ci(j-1)w为工件i上道工序完工时间;ti(j-1)wk为从上道工序加工机床运输到下道工序加工机床的运输时间;t*为临时时间存储变量;tijk为工序oij在机床k上的预计开始时间。
式(1)表示最大完工时间最小;式(2)表示在同一时刻,一道工序只能在一台机床上加工;式(3)表示工序oij的开工时间;式(4)表示工件i的第j道工序的加工时间;式(5)表示同一个工件的不同工序按照先后顺序依次进行加工;式(6)表示工件上道工序的完成时间与运输到本道工序加工机床时间之和;式(7)表示同一工件的不同工序与机床和运输时间的约束;式(8)表示工序在机床上的完工时间。
2改进[@遗传算法#政策技术*]求解[@智能制造#政策技术*]单元调度问题2.1编码与解码编码与解码是用[@遗传算法#政策技术*]求解问题的基础,也是关键所在。
本文采用基于实数编码的双段式编码规则[8]。
图2为一条已编码的染色体,其长度为l=12,l的长度为总工序数的两倍。
在这条染色体左l/2段表示机床的选择部分,右l/2段表示工序的排序部分。
在工序排序部分,每个基因位上的数字代表工件的编号,每个数字出现次数代表该工件的总工序数,每个数字出现的顺序即工序的加工顺序。
如该部分基因位上第一个的“1”就表示工序o11,第二、三个“1”,则表示工序o12、o13。
在机床选择部分,基因位是按照从第一个工件的第一道工序开始到最后一个工件的最后一道工序结束依次进行排列的。
如图2中,因为只有两个工件,每个工件含三道工序,故机床选择部分染色体的基因是按照工序o11,o12,…,o23{}依次排列。
基因位上的数字代表当前工序在其可选加工机床集里选择的第几台机床,图2中最左边的“4”代表的是工序o11在其可选择的5台加工机床里选了第四台机床进行加工。
在解码的时候,从左往右依次遍历染色体,先确定各道工序所择的加工机床,再确定工序加工顺序,最后得到各工序在所选加工机床上的加工时间。
当[@机器人#政策技术*]将工件从一台机床转移到另一台机床进行加工时,则通过两台机床的索引确定[@机器人#政策技术*]在机床之间的运输时间。
例如,当第一个工件的第一道工序o11在机床m4上加工完成时,需要将该工件运输到其第二道工序o12所选择的机床m5上进行加工,其形式如图3所示,2.2种群的初始化初始解的质量对[@遗传算法#政策技术*]求解的速度和质量有非常大的影响[9]。
本文采用一种随机生成与爬山算法相结合的初始化方法对种群进行初始化。
一方面随机初始化的方法保证了种群的多样性,另一方面,采用爬山算法进行局部寻优可以提高初始解的质量,加快算法的收敛速度。
首先,采用随机初始化的方法初始化种群,然后选择种群的一半,对选出的种群中每一个个体进行爬山操作。
其具体过程如下:(1)在需要爬山操作的种群中取一个个体。
(2)对取出的个体进行解码操作,计算其适应度。
(3)在该个体工序染色体部分随机选取两个点,交换两个点基因位的值,得到一条新的染色体,作为原染色体的邻域。
(4)计算新染色体的适应度值,如果优于原染色体,则替换原染色体,否则保留原染色体。
(5)重复过程(3)和(4),直到达到最大迭代次数。
(6)将种群剩下的个体按照上述方法进行爬山操作,直到该种群所有个体都进行了爬山操作。
(7)将经过爬山操作的这一半种群和随机初始化的另一半种群结合为本次算法的初始种群。
2.3选择操作选择操作是用[@遗传算法#政策技术*]解决问题必不可少的一步,通过选择操作,可以使种群中优良基因得以延续,从而使种群朝着好的方向进化。
本文采用轮盘赌法,对初始种群进行选择操作。
根据种群中个体适应度值的大小分配选择概率,适应度值越大的个体,被选中的概率越大,但同时适应度值小的个体也能有机会被选中,这样有利于种群保持多样性。
2.4交叉操作交叉操作是种群在进化的过程中产生新个体的途径之一,也在很大程度上影响着算法的全局搜索能力。
随机地交叉可能会破坏种群中某些优秀基因,不利于种群朝着好的方向进化。
本文采用两种交叉方式,分别对工序顺序染色体和机床选择染色体进行交叉操作。
首先针对工序排序部分染色体,采用由张超勇等[10]提出的基于工件的pox交叉方法,随机将所有工件划分为两个集合ω1|ω2{},然后选出两条父代染色体的工序排序部分标记为p1和p2,分别将它们这部分染色体中含有工件集ω1的各位置基因直接按原位置复制到对应的子代o1和o2,再将p1和p2染色体包含工件集ω2的基因分别复制给子代o2和o1,这样就产生了两条新的工序染色体。
这种方法的好处是,既能保留父代优良个体,又保证了产生的新个体总为可行调度方案。
对于机床选择部分染色体,本文采用一种由最优个体指导交叉的方式对该部分染色体进行交叉操作。
其大致原理如图4所示。
(1)根据当前种群,计算各个个体的适应度,选出适应度最好的个体,将其机床选择部分染色体命名为b,作为指导染色体。
(2)选出两父代的机床选择部分染色体p1和p2。
(3)随机选择b染色体和p1染色体的l/3个整数基因位置集pos。
(4)把步骤(3)选中的基因位的值直接按其在b和p1染色体中的位置复制到子代染色体o1。
(5)将o1染色体剩余的位置用染色体p2对应位置的基因补齐,以获得最终的子代o1。
2.5变异操作变异操作采用张国辉等人[5]提出的方法。
首先,在工序染色体部分随机确定两个位置,互换这两个位置的基因值,得到新的染色体,这样能确保得到的新染色体是可行解。
针对机床选择部分的染色体,随机选择一个基因位,将该基因位上的值替换成其对应工序的可选加工机床集中其他任意一台机床的编号。
3改进算法的执行步骤改进算法的具体流程如图5所示。
4实例本文使用的算法采用matlab2016b工具编程,程序运行在一台个人pc。
为了确定本文提出的改进算法的有效性,本文运用同一个实例来比较该算法与传统[@遗传算法#政策技术*]求解结果。
本文研究的[@智能制造#政策技术*]单元布局如图6所示。
实例中各工序在加工机床上的加工时间如表1所示。
表中“-”代表工序不能在该机床上加工。
表2给出了[@机器人#政策技术*]在各机床之间的运输时间。
本文中算法的各参数设定如下:种群规模为100,种群之间的代沟取0.9,交叉概率取0.6,变异概率为0.08,遗传迭代次数为200次,爬山迭代次数为20次。
为了得到比较可靠的结果,对算法连续运行20次,取其中最好的一次结果与最优解的平均值作为评价指标,其与传统[@遗传算法#政策技术*]结果比较如表3所示,两种算法的收敛曲线如图7所示。
由表中比较结果可看出,本文改进的[@遗传算法#政策技术*]相对传统的[@遗传算法#政策技术*]在性能上具有一定的提升。
采用了本文的初始化方法后,种群的收敛速度有显著的提高。
图8为由本文改进的[@遗传算法#政策技术*]得到的最优解调度甘特图。
5结语针对当前热门的[@智能制造系统#政策技术*]中的[@智能制造#政策技术*]单元调度问题进行研究,考虑了[@机器人#政策技术*]在各机床之间的运输时间,建立了相关的数学模型并提出了一种改进的[@遗传算法#政策技术*]来求解该问题。
在算法的初始化过程中加入爬山算法来提高初始解的质量,并在交叉操作时,对机床选择部分染色体采用一种由当前种群最优个体指导交叉的方法来改进交叉算子,以扩大算法的搜索能力。
文章最后采用一个实例对该算法进行仿真验证,结果显示其性能比传统[@遗传算法#政策技术*]更优。
