[@智能制造系统#政策技术*]的[@多agent#政策技术*]模型研究摘要:提出了一个[@智能制造系统#政策技术*]的[@多agent#政策技术*]模型,其中[@agent#政策技术*]代表基本的处理实体,[@agent#政策技术*]的特性用[@petri网#政策技术*]来表示。
由于[@agent#政策技术*]具有[@自主性#技术特点*]、[@社会#应用领域*]交互性、反应能力和预动能力的特点,使得能够进行[@分布式#技术特点*]决策,而系统的合作是通过通讯和协商解决的,[@agent#政策技术*]在交互的过程中被赋予角色,从而能够满足[@智能制造#政策技术*]中复杂过程建模灵活性的需求,并能够构建一个可重用部件的扩展框架。
关键词:[@多agent#政策技术*];[@petri网#政策技术*];[@智能制造#政策技术*];模型[@智能制造系统#政策技术*]([@ims#政策技术*])可以看成是各种智能子系统有机结合而组成的复杂大系统,各子系统间在进行大量物料、能量和信息交流的基础上完成[@分布式#技术特点*]求解[1]。
[@分布式人工智能#政策技术*](d[@ai#政策技术*])中的[@多agent系统#政策技术*]理论为[@智能制造系统#政策技术*]的建模和实现提供了可行性技术支持,并成为制造领域中的研究热点之一。
制造过程是一种典型的[@多agent#政策技术*]问题求解过程,[@制造系统#政策技术*]中的每一部门(或环节)相当于该过程中的一个[@agent#政策技术*]。
[@制造系统#政策技术*]中的每一子任务或单元设备等都可由单个[@agent#政策技术*]或组织良好的[@agent#政策技术*]群来[@代理#技术特点*]或实现,并通过它们的交互和相互协调与合作,共同完成制造任务。
将[@制造系统#政策技术*]模拟成[@多agent系统#政策技术*]可以使系统易于设计、实现与维护,降低系统的复杂性,增强系统的可重组性、可扩展性和可靠性,以及提高系统的[@柔性#技术特点*]、[@适应性#技术特点*]和敏捷性等[2]。
本文提出的基于[@多agent#政策技术*]的[@智能制造系统#政策技术*]模型中用[@agent#政策技术*]表示基本的处理实体,[@agent#政策技术*]的特性用[@petri网#政策技术*]来描述,[@agent#政策技术*]主要和变迁相联系。
1相关技术分析[@petri网#政策技术*]作为一种图形化的建模工具,由于它能精确地描述事件之间的顺序、并发、同步和竞争关系,尤其适合于对multi-[@agent#政策技术*]这样具有并发成分的系统建模和性能分析。
虽然用一个[@petri网#政策技术*]对整个[@多agent系统#政策技术*]进行建模具有易于进行结构和行为分析、便于对整个系统的浏览及控制的优点,但是其缺点是系统的可靠性及可扩展性差[3]。
另外,各种[@petri网#政策技术*]及其扩展(从基本的c/e-nets到pr/t-nets及cpn等)都有其独特的表达能力,于是为了最大可能地利用其优越之处,我们对不同[@agent#政策技术*]采用不同的[@petri网#政策技术*]来描述其特定的交互规范、资源分配、约束变迁和通讯规则,于是整个[@agent#政策技术*]系统的完备性、正确性的验证将是十分复杂的[4]。
本文采用文献[5]提出的“基于系统完善(systemrefinement)的展开方法(unfoldmethod)”,因为这种方法在很[@多agent系统#政策技术*]中经实践证明不仅易于构建[@多agent系统#政策技术*],而且易于从概念层(conceptuallevel)到形式化层(formallevel)和原型层(prototypinglevel)的转化。
2模型定义基于[@多agent#政策技术*]的[@智能制造系统#政策技术*]定义为二元组mmas=(ap,np),其中ap表示[@agent#政策技术*]的结构,np表示通讯和协商结构。
[@agent#政策技术*]的结构可进一步定义为ap=(a,t,it,ot,pr,{fit},{fot},{dec},{inc},transr,amal,aval)。
其中a={a1,…,ak}且k≥2,表示有限的[@agent#政策技术*]集合;t={t1,…,tm}且m≥1,表示定义在一个有限时间单元集合上的时间点的集合;如果模型无时间约束时t为空;it表示在t≠时与输入托肯(to[@ke#事业单位*]n)产生时的时间相联系的输入托肯的集合;ot表示在t≠与输出托肯(to[@ke#事业单位*]n)产生时的时间相联系的输出托肯的集合;pr表示用于定义[@agent#政策技术*]变迁规则的谓词集合;fit:a→it和fot:a→ot表示每个[@agent#政策技术*]的输入和输出托肯数目的函数,其相关谓词如下:当fit(ag)=it时inputto[@ke#事业单位*]ns(ag,it)为true;且当fot(ag)=ot时inputto[@ke#事业单位*]ns(ag,ot)为true。
dec:a→n,inc:a→n表示当[@agent#政策技术*]执行变迁时,用于定义输入和输出托肯数目变化的函数,其相关谓词如下:当为dec(ag)=n1时,decrease(ag,n1)为true;当inc(ag)=n2时increase(ag,n2)为true。
transr表示变迁规则的集合;amal:a→ba*,aval:a→ba*表示对于给定的[@agent#政策技术*],用于定义[@网络#政策技术*]中其上级(产生者)和下级(消费者)[@agent#政策技术*]链表的函数,这些链表定义了一个特定[@agent#政策技术*]的[@社会性#技术特点*]及与其相互作用的其它[@agent#政策技术*]。
为了说明变迁规则,我们使用了类似于prolog语言的表示方法,变迁的规则有如下形式:inputto[@ke#事业单位*]ns(ag,it);decrease(ag,n1),increase(ag,n2),/*新的it为it-n1,新的ot为ot+n2*/itnewisit-n1,otnewisot+n2→inputto[@ke#事业单位*]ns(ag,itnew),outto[@ke#事业单位*]ns(ag,otnew)在时间约束模型中,每个托肯都有一个和它产生相关联的时间点,并且我们在这个时间模型中增加了一些其它特性,如与变迁相关的时间段、在变迁过程中的运算符、完成运算所需要的相关时间;另外我们还指定了额外的时间参数,如延迟变迁的时间、产生输出托肯的最后期限。
如当我们考虑如下谓词:currenttime(ag,ts):表示实例化[@agent#政策技术*]的当前时间。
max(x,y,z):表示把x和y中的最大值赋给z。
transitiontime(ag,tt):表示当[@agent#政策技术*]ag的变迁时间间隔为tt才为true。
operation(ag,op,top):表示当[@agent#政策技术*]ag执行op并且执行运算所需要的时间为top个时间片时为true。
则[@agent#政策技术*]的变迁规则如下:currenttime(ag,ts),inputto[@ke#事业单位*]ns(ag,it,ts),decrease(ag,n1),it≥n1,outputto[@ke#事业单位*]ns(ag,ot,ts),increase(ag,n2),transitiontime(ag,tt);operation(ag,op,top),itnew是it-n1,otnew是ot+n2,max(tt,top,tmax),tnew是ts+tmax→execute(op),currenttime(ag,tnew),inputto[@ke#事业单位*]ns(ag,itnew,tnew),outto[@ke#事业单位*]ns(ag,otnew,tnew)。
并且[@agent#政策技术*]可以有多个相关的变迁规则。
在基于文献[6,7]的基础上,[@agent#政策技术*]的协商结构定义如下:np=(r,q,n,p,strategr)式中,r={r1,…,rj},且j≥2,表示角色的集合;q:a→r表示把角色赋予[@agent#政策技术*]的函数;nd表示建立在协商域d上的协商集n;k表示通讯原语的集合,两个特殊的原语为{start,stop}k;p=(k,c:r×k→2k)表示通讯协议,其中c是通讯原语到与特定角色相联系的有关反应子集上的映射;strager表示建立在[@agent#政策技术*]的状态、角色和协议上的协商策略。
在此模型中,角色r={consumer,producer}在[@agent#政策技术*]产生冲突时,可以扩充为r′=r{lead-er,follower}。
于是映射c的有关定义如下:c(producer,start)={av[@ai#政策技术*]lable(x)}(1)c(consumer,av[@ai#政策技术*]lable(x))={get(y),noneed}(2)c(producer,get(y))={ok(y),only(x),conflict(listag,role)}(3)c(producer,noneed)={stop}c(consumer,{ok(y),only(x),notav[@ai#政策技术*]lable})={stop}c(consumer,conflict(listag,role))=consumer开始和listag中的[@agent#政策技术*]协商并且role({leader,follower}c(consumer,start)={request(y)}c(producer,request(y))={notav[@ai#政策技术*]ble,ok(y),only(x)}.这个协商模型可以看作一个不确定的有限[@自动#技术特点*]机,这是由于[@agent#政策技术*]的反应既取决于它的内部状态又取决于和它相互作用的同伴的行为,而它的角色决定了它将采取的策略。
例如在(1)中产生者通过通知它的跟随者它有x个可分配的托肯开始通讯,在(2)中消费着如果需要y个托肯或根本不需要时便响应,在(3)中当产生者收到所要求的数目时就就通知消费者ok(y)的信息,或者在产生冲突时,就回答only(x)或者和冲突的[@agent#政策技术*]进行协商及在协商过程中它所承担的角色。
图1说明了[@agent#政策技术*]相互作用的[@网络#政策技术*]图。
3[@agent#政策技术*]的结构和控制从结构上看,[@agent#政策技术*]由其名称、上级(产生者)和下级(消费者)、[@agent#政策技术*]link链表、[@知识库#政策技术*]、通讯模块、控制模块构成,见图2。
产生规则用来表示[@agent#政策技术*]的知识;[@知识库#政策技术*]主要由变迁规则、决策规则、协商规则及执行关联运算的代码组成;变迁规则是实现[@agent#政策技术*]的活动及产生和消耗托肯的方式;决策规则主要作用在于决定变迁规则的执行策略,解决在多个消费者所需要的托肯大于产生者所拥有的托肯数目时,决定如何通过协商解决竞争[@agent#政策技术*]之间的冲突;协商规则主要用于彼此竞争的[@agent#政策技术*]之间的协商,另外决策和协商规则还实现协商模型中的strategr策略。
通讯模块(comm)负责[@agent#政策技术*]之间的同步通讯和相互作用,控制模块(cm)由工作存储器、控制[@agent#政策技术*]活动的部件和执行部件组成,工作单元定义了[@agent#政策技术*]的当前状态,它主要包括输入和输出托肯、系统的当前时间、[@agent#政策技术*]之间相互作用时所承担的角色。
决策规则说明了当[@agent#政策技术*]收到或发送消息时如何反应。
例如在图1中当[@agent#政策技术*]3通过启动变迁产生3个托肯时,相应的决策规则将把av[@ai#政策技术*]lable(3)这一消息发送给其下级链表中的[@agent#政策技术*],按照上述规定的交互协议,于是[@agent#政策技术*]3承担产生者的角色,而[@agent#政策技术*]4和[@agent#政策技术*]5承担消费者的角色。
同时[@agent#政策技术*]3在和[@agent#政策技术*]1和[@agent#政策技术*]2相互交互的过程中又承担了消费者的角色。
但是也有特殊的情况,如时间达到最后期限时,[@agent#政策技术*]重新初始化并从和它连接的产生者中请求获得托肯(如图1中的[@agent#政策技术*]7),这时产生者根据它所拥有的决策规则采取相应的措施。
而[@agent#政策技术*]3发布av[@ai#政策技术*]lable(3)这一消息后,[@agent#政策技术*]3从[@agent#政策技术*]4中收到get(1)及从[@agent#政策技术*]5中收到get(3)两个消息,于是产生冲突,我们解决这一问题的方法是让彼此竞争的[@agent#政策技术*]通过协商来解决:首先产生者把产生了冲突这一信息通知所有彼此竞争的[@agent#政策技术*],以便使它们知道应当和谁协商,并且从中选择一个承担领导者的角色,而其它的[@agent#政策技术*]承担跟随者的角色,角色的分配可以采取优先级的方法(具有最高优先级的充当领导者)或者从竞争的[@agent#政策技术*]随意选择一个充当领导者的角色,随后领导者和跟随者通过使用它们各自[@知识库#政策技术*]中的协商规则通过谈判解决冲突,这些协商规则可以采取多种试探法,如能启动特定变迁的请求优先、产生输出托肯所需时间最长或最短的请求优先或者具有最短延迟变迁的请求优先等。
4实例分析下面我们以某公司供应链中的采购约束问题加以说明。
假设公司a([@agent#政策技术*]a)的生产计划见表1。
其中t表示时间,d表示供应商预期供应的原料数量,为了便于说明,我们仅限于一种原料r,并且有两个合格的供应商b([@agent#政策技术*]b)和供应商c([@agent#政策技术*]c)。
于是[@agent#政策技术*]a向[@agent#政策技术*]b和[@agent#政策技术*]c发出求购信息,[@agent#政策技术*]b和[@agent#政策技术*]c一旦收到请求信息后,它们以下面的形式给予回答:[@agent#政策技术*]b的回答为(if((supplybr)∧(2≤duetime≤4))((quantity≤600)∧(unitpricer3.05)))(if((supplybr)∧(5≤duetime≤10))((quantity≤1500)∧(unitpricer3.00)))(if((supplybr)∧(due_time≥11))(unitpricer2.95))[@agent#政策技术*]b第一个约束的意思是,如果交货时间在2周和4周之间,那么它能以单价3.05元的价格供应600件原料r。
同样[@agent#政策技术*]c的回答为(if((supplycr)∧(2≤duetime≤3))((quantity≤500)∧(unit_pricer2.95)))(if((supplycr)∧(4≤due_time≤8))((quantity≤1600)∧(unit_pricer2.90)))(if((supplycr)∧(duetime≥9))(unitpricer2.85))根据[@agent#政策技术*]b和[@agent#政策技术*]c的回答,[@agent#政策技术*]a将构建如图3所示的搜索树。
如果[@agent#政策技术*]a找到满意的解,它将接受[@agent#政策技术*]b和[@agent#政策技术*]c的回答。
如果没有找到满意的答案,则[@agent#政策技术*]a有如下选择:改变它的生产计划,或者要求[@agent#政策技术*]b和[@agent#政策技术*]c放松约束限制。
无论采用那种方案[@agent#政策技术*]a都将会给[@agent#政策技术*]b或[@agent#政策技术*]c一个反对意见,于是经过数轮协商后,[@agent#政策技术*]a和[@agent#政策技术*]b或[@agent#政策技术*]c会建立一种双方都能接受的约束条件,从而建立起合作关系。
5结束语本文基于[@多agent#政策技术*]的[@制造系统#政策技术*]建模和处理模型有如下特点:和一般的[@petri网#政策技术*]模型相比,处理实体[@agent#政策技术*]具有[@自治性#技术特点*]、反应能力和主动性。
合作是通过[@agent#政策技术*]的交互和协商完成的,从而保证了系统功能的一致性。
而处理实体[@agent#政策技术*]的[@分布式#技术特点*]特性可以满足虚拟[@企业#事业单位*]的供应链过程地理上的分布性。
另外由于和[@petri网#政策技术*]紧密相连,因而还可以模拟及评价系统的性能、进行[@知识库#政策技术*]中关联规则的一致性检查,但是针对制造过程大而复杂的特点这一模型中的[@agent#政策技术*]的粒度对于某些过程的建模来说太小,因而增加了通讯的开销,这一点还有待于我们进一步研究。
