智能制造系统的多agent模型研究摘要:提出了一个智能制造系统的多agent模型,其中agent代表基本的处理实体,agent的特性用petri网来表示。
由于agent具有自主性、社会交互性、反应能力和预动能力的特点,使得能够进行分布式决策,而系统的合作是通过通讯和协商解决的,agent在交互的过程中被赋予角色,从而能够满足智能制造中复杂过程建模灵活性的需求,并能够构建一个可重用部件的扩展框架。
关键词:多agent;petri网;智能制造;模型智能制造系统(ims)可以看成是各种智能子系统有机结合而组成的复杂大系统,各子系统间在进行大量物料、能量和信息交流的基础上完成分布式求解[1]。
分布式人工智能(dai)中的多agent系统理论为智能制造系统的建模和实现提供了可行性技术支持,并成为制造领域中的研究热点之一。
制造过程是一种典型的多agent问题求解过程,制造系统中的每一部门(或环节)相当于该过程中的一个agent。
制造系统中的每一子任务或单元设备等都可由单个agent或组织良好的agent群来代理或实现,并通过它们的交互和相互协调与合作,共同完成制造任务。
将制造系统模拟成多agent系统可以使系统易于设计、实现与维护,降低系统的复杂性,增强系统的可重组性、可扩展性和可靠性,以及提高系统的柔性、适应性和敏捷性等[2]。
本文提出的基于多agent的智能制造系统模型中用agent表示基本的处理实体,agent的特性用petri网来描述,agent主要和变迁相联系。
1相关技术分析petri网作为一种图形化的建模工具,由于它能精确地描述事件之间的顺序、并发、同步和竞争关系,尤其适合于对multi-agent这样具有并发成分的系统建模和性能分析。
虽然用一个petri网对整个多agent系统进行建模具有易于进行结构和行为分析、便于对整个系统的浏览及控制的优点,但是其缺点是系统的可靠性及可扩展性差[3]。
另外,各种petri网及其扩展(从基本的c/e-nets到pr/t-nets及cpn等)都有其独特的表达能力,于是为了最大可能地利用其优越之处,我们对不同agent采用不同的petri网来描述其特定的交互规范、资源分配、约束变迁和通讯规则,于是整个agent系统的完备性、正确性的验证将是十分复杂的[4]。
本文采用文献[5]提出的“基于系统完善(systemrefinement)的展开方法(unfoldmethod)”,因为这种方法在很多agent系统中经实践证明不仅易于构建多agent系统,而且易于从概念层(conceptuallevel)到形式化层(formallevel)和原型层(prototypinglevel)的转化。
2模型定义基于多agent的智能制造系统定义为二元组mmas=(ap,np),其中ap表示agent的结构,np表示通讯和协商结构。
agent的结构可进一步定义为ap=(a,t,it,ot,pr,{fit},{fot},{dec},{inc},transr,amal,aval)。
其中a={a1,…,ak}且k≥2,表示有限的agent集合;t={t1,…,tm}且m≥1,表示定义在一个有限时间单元集合上的时间点的集合;如果模型无时间约束时t为空;it表示在t≠时与输入托肯(token)产生时的时间相联系的输入托肯的集合;ot表示在t≠与输出托肯(token)产生时的时间相联系的输出托肯的集合;pr表示用于定义agent变迁规则的谓词集合;fit:a→it和fot:a→ot表示每个agent的输入和输出托肯数目的函数,其相关谓词如下:当fit(ag)=it时inputtokens(ag,it)为true;且当fot(ag)=ot时inputtokens(ag,ot)为true。
dec:a→n,inc:a→n表示当agent执行变迁时,用于定义输入和输出托肯数目变化的函数,其相关谓词如下:当为dec(ag)=n1时,decrease(ag,n1)为true;当inc(ag)=n2时increase(ag,n2)为true。
transr表示变迁规则的集合;amal:a→ba*,aval:a→ba*表示对于给定的agent,用于定义网络中其上级(产生者)和下级(消费者)agent链表的函数,这些链表定义了一个特定agent的社会性及与其相互作用的其它agent。
为了说明变迁规则,我们使用了类似于prolog语言的表示方法,变迁的规则有如下形式:inputtokens(ag,it);decrease(ag,n1),increase(ag,n2),/*新的it为it-n1,新的ot为ot+n2*/itnewisit-n1,otnewisot+n2→inputtokens(ag,itnew),outtokens(ag,otnew)在时间约束模型中,每个托肯都有一个和它产生相关联的时间点,并且我们在这个时间模型中增加了一些其它特性,如与变迁相关的时间段、在变迁过程中的运算符、完成运算所需要的相关时间;另外我们还指定了额外的时间参数,如延迟变迁的时间、产生输出托肯的最后期限。
如当我们考虑如下谓词:currenttime(ag,ts):表示实例化agent的当前时间。
max(x,y,z):表示把x和y中的最大值赋给z。
transitiontime(ag,tt):表示当agentag的变迁时间间隔为tt才为true。
operation(ag,op,top):表示当agentag执行op并且执行运算所需要的时间为top个时间片时为true。
则agent的变迁规则如下:currenttime(ag,ts),inputtokens(ag,it,ts),decrease(ag,n1),it≥n1,outputtokens(ag,ot,ts),increase(ag,n2),transitiontime(ag,tt);operation(ag,op,top),itnew是it-n1,otnew是ot+n2,max(tt,top,tmax),tnew是ts+tmax→execute(op),currenttime(ag,tnew),inputtokens(ag,itnew,tnew),outtokens(ag,otnew,tnew)。
并且agent可以有多个相关的变迁规则。
在基于文献[6,7]的基础上,agent的协商结构定义如下:np=(r,q,n,p,strategr)式中,r={r1,…,rj},且j≥2,表示角色的集合;q:a→r表示把角色赋予agent的函数;nd表示建立在协商域d上的协商集n;k表示通讯原语的集合,两个特殊的原语为{start,stop}k;p=(k,c:r×k→2k)表示通讯协议,其中c是通讯原语到与特定角色相联系的有关反应子集上的映射;strager表示建立在agent的状态、角色和协议上的协商策略。
在此模型中,角色r={consumer,producer}在agent产生冲突时,可以扩充为r′=r{lead-er,follower}。
于是映射c的有关定义如下:c(producer,start)={available(x)}(1)c(consumer,available(x))={get(y),noneed}(2)c(producer,get(y))={ok(y),only(x),conflict(listag,role)}(3)c(producer,noneed)={stop}c(consumer,{ok(y),only(x),notavailable})={stop}c(consumer,conflict(listag,role))=consumer开始和listag中的agent协商并且role({leader,follower}c(consumer,start)={request(y)}c(producer,request(y))={notavaible,ok(y),only(x)}.这个协商模型可以看作一个不确定的有限自动机,这是由于agent的反应既取决于它的内部状态又取决于和它相互作用的同伴的行为,而它的角色决定了它将采取的策略。
例如在(1)中产生者通过通知它的跟随者它有x个可分配的托肯开始通讯,在(2)中消费着如果需要y个托肯或根本不需要时便响应,在(3)中当产生者收到所要求的数目时就就通知消费者ok(y)的信息,或者在产生冲突时,就回答only(x)或者和冲突的agent进行协商及在协商过程中它所承担的角色。
图1说明了agent相互作用的网络图。
3agent的结构和控制从结构上看,agent由其名称、上级(产生者)和下级(消费者)、agentlink链表、知识库、通讯模块、控制模块构成,见图2。
产生规则用来表示agent的知识;知识库主要由变迁规则、决策规则、协商规则及执行关联运算的代码组成;变迁规则是实现agent的活动及产生和消耗托肯的方式;决策规则主要作用在于决定变迁规则的执行策略,解决在多个消费者所需要的托肯大于产生者所拥有的托肯数目时,决定如何通过协商解决竞争agent之间的冲突;协商规则主要用于彼此竞争的agent之间的协商,另外决策和协商规则还实现协商模型中的strategr策略。
通讯模块(comm)负责agent之间的同步通讯和相互作用,控制模块(cm)由工作存储器、控制agent活动的部件和执行部件组成,工作单元定义了agent的当前状态,它主要包括输入和输出托肯、系统的当前时间、agent之间相互作用时所承担的角色。
决策规则说明了当agent收到或发送消息时如何反应。
例如在图1中当agent3通过启动变迁产生3个托肯时,相应的决策规则将把available(3)这一消息发送给其下级链表中的agent,按照上述规定的交互协议,于是agent3承担产生者的角色,而agent4和agent5承担消费者的角色。
同时agent3在和agent1和agent2相互交互的过程中又承担了消费者的角色。
但是也有特殊的情况,如时间达到最后期限时,agent重新初始化并从和它连接的产生者中请求获得托肯(如图1中的agent7),这时产生者根据它所拥有的决策规则采取相应的措施。
而agent3发布available(3)这一消息后,agent3从agent4中收到get(1)及从agent5中收到get(3)两个消息,于是产生冲突,我们解决这一问题的方法是让彼此竞争的agent通过协商来解决:首先产生者把产生了冲突这一信息通知所有彼此竞争的agent,以便使它们知道应当和谁协商,并且从中选择一个承担领导者的角色,而其它的agent承担跟随者的角色,角色的分配可以采取优先级的方法(具有最高优先级的充当领导者)或者从竞争的agent随意选择一个充当领导者的角色,随后领导者和跟随者通过使用它们各自知识库中的协商规则通过谈判解决冲突,这些协商规则可以采取多种试探法,如能启动特定变迁的请求优先、产生输出托肯所需时间最长或最短的请求优先或者具有最短延迟变迁的请求优先等。
4实例分析下面我们以某公司供应链中的采购约束问题加以说明。
假设公司a(agenta)的生产计划见表1。
其中t表示时间,d表示供应商预期供应的原料数量,为了便于说明,我们仅限于一种原料r,并且有两个合格的供应商b(agentb)和供应商c(agentc)。
于是agenta向agentb和agentc发出求购信息,agentb和agentc一旦收到请求信息后,它们以下面的形式给予回答:agentb的回答为(if((supplybr)∧(2≤duetime≤4))((quantity≤600)∧(unitpricer3.05)))(if((supplybr)∧(5≤duetime≤10))((quantity≤1500)∧(unitpricer3.00)))(if((supplybr)∧(due_time≥11))(unitpricer2.95))agentb第一个约束的意思是,如果交货时间在2周和4周之间,那么它能以单价3.05元的价格供应600件原料r。
同样agentc的回答为(if((supplycr)∧(2≤duetime≤3))((quantity≤500)∧(unit_pricer2.95)))(if((supplycr)∧(4≤due_time≤8))((quantity≤1600)∧(unit_pricer2.90)))(if((supplycr)∧(duetime≥9))(unitpricer2.85))根据agentb和agentc的回答,agenta将构建如图3所示的搜索树。
如果agenta找到满意的解,它将接受agentb和agentc的回答。
如果没有找到满意的答案,则agenta有如下选择:改变它的生产计划,或者要求agentb和agentc放松约束限制。
无论采用那种方案agenta都将会给agentb或agentc一个反对意见,于是经过数轮协商后,agenta和agentb或agentc会建立一种双方都能接受的约束条件,从而建立起合作关系。
5结束语本文基于多agent的制造系统建模和处理模型有如下特点:和一般的petri网模型相比,处理实体agent具有自治性、反应能力和主动性。
合作是通过agent的交互和协商完成的,从而保证了系统功能的一致性。
而处理实体agent的分布式特性可以满足虚拟企业的供应链过程地理上的分布性。
另外由于和petri网紧密相连,因而还可以模拟及评价系统的性能、进行知识库中关联规则的一致性检查,但是针对制造过程大而复杂的特点这一模型中的agent的粒度对于某些过程的建模来说太小,因而增加了通讯的开销,这一点还有待于我们进一步研究。
